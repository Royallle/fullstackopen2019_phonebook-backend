{"version":3,"sources":["services/persons.js","index.js"],"names":["baseUrl","axios","get","newObject","post","id","put","delete","Filter","filter","setFilter","value","onChange","event","target","Notification","notification","message","className","style","PersonForm","persons","setPersons","setNotificationMessage","useState","newName","setNewName","newNumber","setNewNumber","onSubmit","preventDefault","personObject","name","number","existsPerson","find","person","alert","window","confirm","personService","then","response","map","pr","data","catch","error","concat","type","Persons","toLocaleLowerCase","includes","toLowerCase","i","key","onClick","p","handleDelete","App","useEffect","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2a60da8d.chunk.js","sourcesContent":["import axios from 'axios'\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAll = () => {\r\n    return axios.get(baseUrl)\r\n}\r\n\r\nconst createPerson = newObject => {\r\n    return axios.post(baseUrl, newObject)\r\n}\r\n\r\nconst updatePerson = (id, newObject) => {\r\n    return axios.put(`${baseUrl}/${id}`, newObject)\r\n}\r\n\r\nconst deletePerson = (id) => {\r\n    return axios.delete(`${baseUrl}/${id}`)\r\n}\r\n  \r\nexport default { \r\n    getAll: getAll, \r\n    createPerson: createPerson, \r\n    updatePerson: updatePerson,\r\n    deletePerson: deletePerson\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css'\nimport { useState, useEffect  } from 'react'\n\nimport personService from './services/persons'\n\nconst Filter = ({filter,setFilter}) => {\n\n  const handleFilterChange = (event) =>  {\n    setFilter(event.target.value);\n  }  \n\n  return (\n    <div>\n      filter shown with <input  value={filter} onChange={handleFilterChange}/>\n    </div>\n  )\n}\n\nconst Notification = ({notification}) => {\n  if(notification.message == null || notification.message === '') {\n    return null;\n  } else {\n    return (<div className={notification.style}>{notification.message}</div>\n    )\n  }\n\n}\n\nconst PersonForm = ({persons,setPersons,setNotificationMessage}) => {\n\n  const [ newName, setNewName] = useState('')\n  const [ newNumber, setNewNumber] = useState('')  \n\n  const handleNameChange = (event) => {\n    setNewName(event.target.value);\n  }\n\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value);\n  }  \n\n  const addPerson = (event) => {\n    event.preventDefault();\n\n    if(newName === '' || newNumber === '') {\n      alert('The name and number need to be introduced!');\n      return;\n    }\n\n    const personObject = {\n        name: newName,\n        number: newNumber\n    }\n    \n    let existsPerson = persons.find( (person) => (person.name === personObject.name)) \n\n    if(existsPerson) {\n      if (existsPerson.name === personObject.name && existsPerson.number === personObject.number) {\n\n        alert(`'${personObject.name}' is already added to phonebook`)  \n\n      } else if (personObject.number !== existsPerson.number) {\n\n        if (window.confirm(`'${existsPerson.name}' is already added to phonebook, replace the old number with a new one?`)) {\n\n          personService.updatePerson(existsPerson.id,personObject).then(response => {\n            setPersons(persons.map(pr => pr.id !== existsPerson.id ? pr : response.data ));\n          }).catch(error => {\n            setNotificationMessage({message:`'${existsPerson.name}' was already deleted from server`,style:'notification-error'})\n          })\n        }\n      }\n    } else {\n      personService.createPerson(personObject).then(response => {\n        setPersons(persons.concat(response.data));\n        setNewName('');       \n        setNewNumber('');\n        setNotificationMessage({message:'Added '+personObject.name,style:'notification-ok'})\n      }).catch(error => {\n        setNotificationMessage({message:error.response.data.error,style:'notification-error'})\n      })   \n    };\n  }  \n\n\n  return (\n    <form onSubmit={addPerson}>\n      <div>\n        name: <input  value={newName} \n                      onChange={handleNameChange}\n              />\n      <br/>\n        number: <input  value={newNumber} \n                      onChange={handleNumberChange}\n              />\n      </div>\n      <div>\n        <button type=\"submit\">add</button>\n      </div>\n    </form>   \n  )\n}\n\nconst Persons = ({filter, persons, setPersons}) => {\n\n  const handleDelete = (person) => {\n    if (window.confirm(\"Delete \"+person.name+\" ?\")) {\n        personService.deletePerson(person.id).then(response => {\n          setPersons(persons.filter(p => p.id !== person.id));\n        });\n    }\n\n  }    \n\n  const filteredPersons = () => {\n    return (filter ? persons.filter(person => (person.name.toLocaleLowerCase()).includes(filter.toLowerCase())) : persons)  \n  }\n\n  const personRows = () => {\n    let filterArray = filteredPersons();\n    return filterArray.map((person,i) => {return (<p key={i}>{person.name} {person.number} <button key={'btn-'+i} onClick={() => handleDelete(person)}>delete</button></p>)})\n  }  \n\n  return (\n    <div>\n      {personRows()}\n    </div>\n  )\n}\n\n\nconst App = () => {\n  const [ persons, setPersons] = useState([]) \n  const [notification, setNotificationMessage ] = useState({\n    message:'',\n    style:''\n  });\n\n  useEffect(() => { \n    personService.getAll().then(response => {\n      setPersons(response.data)\n    })\n  }, [])\n \n  const [ filter, setFilter] = useState('')\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification notification={notification}/>\n      <Filter filter={filter} setFilter={setFilter} />\n      <h3>add a new</h3>\n      <PersonForm persons={persons} setPersons={setPersons} setNotificationMessage={setNotificationMessage} />\n      <h3>Numbers</h3>\n      <Persons filter={filter} persons={persons} setPersons={setPersons} setNotificationMessage={setNotificationMessage}/>\n    </div>\n  )\n}\n\nexport default App\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}